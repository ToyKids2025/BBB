/**
 * üß™ TESTE COMPLETO DO SISTEMA
 * Execute no Console do navegador (F12)
 */

console.log('üß™ ========================================');
console.log('   TESTE COMPLETO - BUSCABUSCABRASIL');
console.log('========================================\n');

// Importar fun√ß√µes (cole no console depois de abrir o site)
const { detectPlatform, addAffiliateTag, createDeepLink, isMobile } = window;

// URLs de teste
const testUrls = {
  amazon: 'https://www.amazon.com.br/Notebook-Gamer-Dell-G15-5520/dp/B0C123ABC',
  amazonComTag: 'https://www.amazon.com.br/produto/dp/B0C123ABC?tag=outra-tag-20',
  mercadolivre: 'https://www.mercadolivre.com.br/notebook-gamer/p/MLB123456789',
  mercadolivreComTag: 'https://www.mercadolivre.com.br/produto/MLB123456789?matt_word=outra_tag&matt_tool=12345'
};

console.log('üìã TESTE 1: DETEC√á√ÉO DE PLATAFORMA\n');
Object.entries(testUrls).forEach(([key, url]) => {
  const platform = detectPlatform ? detectPlatform(url) : 'fun√ß√£o n√£o encontrada';
  console.log(`${key}: ${platform}`);
});

console.log('\nüìã TESTE 2: APLICA√á√ÉO DE TAGS\n');

// Teste Amazon
console.log('üî∏ AMAZON:');
console.log('Original:', testUrls.amazon);
const amazonTagged = addAffiliateTag ? addAffiliateTag(testUrls.amazon, 'amazon') : 'fun√ß√£o n√£o encontrada';
console.log('Com Tag:', amazonTagged);
console.log('‚úÖ Tag correta?', amazonTagged.includes('tag=buscabusca0f-20') ? 'SIM ‚úÖ' : 'N√ÉO ‚ùå');

console.log('\nüî∏ AMAZON (j√° com outra tag):');
console.log('Original:', testUrls.amazonComTag);
const amazonReplaced = addAffiliateTag ? addAffiliateTag(testUrls.amazonComTag, 'amazon') : 'fun√ß√£o n√£o encontrada';
console.log('Substitu√≠da:', amazonReplaced);
console.log('‚úÖ Tag substitu√≠da?', amazonReplaced.includes('tag=buscabusca0f-20') && !amazonReplaced.includes('outra-tag-20') ? 'SIM ‚úÖ' : 'N√ÉO ‚ùå');

console.log('\nüî∏ MERCADO LIVRE:');
console.log('Original:', testUrls.mercadolivre);
const mlTagged = addAffiliateTag ? addAffiliateTag(testUrls.mercadolivre, 'mercadolivre') : 'fun√ß√£o n√£o encontrada';
console.log('Com Tag:', mlTagged);
console.log('‚úÖ matt_word correta?', mlTagged.includes('matt_word=WA20250726131129') ? 'SIM ‚úÖ' : 'N√ÉO ‚ùå');
console.log('‚úÖ matt_tool correta?', mlTagged.includes('matt_tool=WA20250726131129') ? 'SIM ‚úÖ' : 'N√ÉO ‚ùå');

console.log('\nüìã TESTE 3: DEEP LINKS MOBILE\n');
console.log('Dispositivo √© mobile?', isMobile ? isMobile() : navigator.userAgent.includes('Mobile'));

if (createDeepLink) {
  const mlDeepLink = createDeepLink(testUrls.mercadolivre, 'mercadolivre', 'WA20250726131129');
  const amzDeepLink = createDeepLink(testUrls.amazon, 'amazon', 'buscabusca0f-20');

  console.log('ML Deep Link:', mlDeepLink || 'N√£o gerado');
  console.log('Amazon Deep Link:', amzDeepLink || 'N√£o gerado');
} else {
  console.log('‚ö†Ô∏è Fun√ß√£o createDeepLink n√£o encontrada');
}

console.log('\nüìã TESTE 4: PERSIST√äNCIA\n');

// Verificar LocalStorage
const lsKeys = [];
for (let i = 0; i < localStorage.length; i++) {
  const key = localStorage.key(i);
  if (key.includes('bb_') || key.includes('device') || key.includes('fingerprint')) {
    lsKeys.push(key);
  }
}
console.log('LocalStorage keys (tracking):', lsKeys.length);
lsKeys.forEach(key => console.log(`  - ${key}`));

// Verificar Cookies
const cookies = document.cookie.split(';').filter(c =>
  c.includes('bb_') || c.includes('device') || c.includes('fingerprint') || c.includes('aff')
);
console.log('\nCookies (tracking):', cookies.length);
cookies.forEach(c => console.log(`  - ${c.trim()}`));

// Verificar Service Worker
console.log('\nService Worker:', navigator.serviceWorker ?
  (navigator.serviceWorker.controller ? '‚úÖ ATIVO' : '‚ö†Ô∏è Registrado mas n√£o ativo') :
  '‚ùå N√£o suportado');

console.log('\nüìã TESTE 5: CAMADAS DE PERSIST√äNCIA\n');

// Verificar se Eternal Tracking est√° ativo
console.log('Eternal Tracking:', window.EternalTrackingSystem ? '‚úÖ Dispon√≠vel' : '‚ö†Ô∏è N√£o encontrado');
console.log('Ultimate Cookie Sync:', window.ultimateCookieSync ? '‚úÖ Dispon√≠vel' : '‚ö†Ô∏è N√£o encontrado');
console.log('Safari Persistence:', window.persistence ? '‚úÖ Dispon√≠vel' : '‚ö†Ô∏è N√£o encontrado');

console.log('\n========================================');
console.log('   ‚úÖ TESTE COMPLETO FINALIZADO');
console.log('========================================\n');

console.log('üìä RESUMO:');
console.log('1. Detec√ß√£o de plataforma: ' + (detectPlatform ? '‚úÖ' : '‚ùå'));
console.log('2. Aplica√ß√£o de tags: ' + (addAffiliateTag ? '‚úÖ' : '‚ùå'));
console.log('3. Deep links: ' + (createDeepLink ? '‚úÖ' : '‚ùå'));
console.log('4. LocalStorage: ' + (lsKeys.length > 0 ? `‚úÖ (${lsKeys.length} keys)` : '‚ùå'));
console.log('5. Cookies: ' + (cookies.length > 0 ? `‚úÖ (${cookies.length} cookies)` : '‚ùå'));
console.log('6. Service Worker: ' + (navigator.serviceWorker?.controller ? '‚úÖ' : '‚ö†Ô∏è'));

console.log('\nüí° PR√ìXIMOS PASSOS:');
console.log('1. Criar um link real no painel');
console.log('2. Abrir o link em modo an√¥nimo');
console.log('3. Verificar se a tag aparece na URL final');
console.log('4. Testar no celular para ver deep links');
